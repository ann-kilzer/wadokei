{"version":3,"sources":["Tick.jsx","Hand.jsx","Tokei.jsx","unfixedHours.js","waTime.js","Wadokei.jsx","ToggleSwitch/ToggleSwitch.jsx","Container.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["Tick","angle","length","width","symbol","emoji","secondarySymbol","regionName","className","style","transform","top","bottom","Hand","name","oppositeLength","Tokei","props","hour","minute","second","hourTicks","i","push","renderHourTicksFn","renderHourHand","defaultProps","undefined","UnfixedHours","day","strike","numeral","zodiacSymbol","zodiacEmoji","night","WaTime","date","sunrise","sunset","timeMinutes","getHours","getMinutes","this","updateSunriseSunset","updateTime","dayLengthMinutes","nightLengthMinutes","sunriseTimeMinutes","sunsetTimeMinutes","minutesFromSunrise","minutesFromSunset","isDay","Math","floor","MILLIS_PER_DAY","Wadokei","waTime","daytime","dayAngle","dayStart","nightAngle","nightStart","renderRegion","region","offset","dawn","pinkMorning","yellowMorning","yellowAfternoon","pinkAfternoon","sundown","blueEvening","daylightStyle","background","renderDaySegment","unfixedHours","waHour","renderFaceText","waMinute","ToggleSwitch","id","checked","onChange","optionLabels","type","e","target","htmlFor","data-yes","data-no","Container","size","useState","Date","setDate","wa","setWa","useEffect","interval","setInterval","clearInterval","getSeconds","height","axios","require","App","url","today","setToday","setSunrise","setSunset","APITimeToDate","APITime","UTCTime","toLocaleString","fetchSunsetSunrise","get","then","response","console","log","data","results","catch","error","day1","day2","getDate","getMonth","getYear","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.044006ff.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function Tick({\n  angle = 0,\n  length = 5,\n  width = 3,\n  symbol,\n  emoji,\n  secondarySymbol,\n  regionName,\n}) {\n  return (\n    <div\n      className={`tokei_tick ${regionName}_tick`}\n      style={{\n        transform: `rotate(${angle}deg)`,\n      }}\n    >\n      <div\n        className=\"tokei_tick_inner\"\n        style={{\n          width: `${width}px`,\n          top: 22,\n          bottom: `${100 - length}%`,\n        }}\n      />\n      {symbol && (\n        <div\n          className=\"tokei_tick_symbol\"\n        >\n          {symbol}\n        </div>\n      )}\n      {secondarySymbol && (\n        <div\n          className=\"tokei_tick_secondary_symbol\"\n        >\n          {secondarySymbol}\n        </div>\n      )}\n      {emoji && (\n        <div\n          className=\"tokei_tick_emoji\"\n        >\n          {emoji}\n        </div>\n      )}\n    </div>\n  );\n}\n\nTick.propTypes = {\n  angle: PropTypes.number,\n  length: PropTypes.number,\n  symbol: PropTypes.string.isRequired,\n  width: PropTypes.number,\n  regionName: PropTypes.string.isRequired,\n  emoji: PropTypes.string,\n  secondarySymbol: PropTypes.string,\n};\n\nTick.defaultProps = {\n  angle: 0,\n  length: 5,\n  width: 3,\n  emoji: undefined,\n  secondarySymbol: undefined,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function Hand({\n  name,\n  angle,\n  length,\n  width,\n  oppositeLength,\n}) {\n  return (\n    <div\n      className={`outer_hand ${name}_hand`}\n      style={{\n        transform: `rotate(${angle}deg)`,\n      }}\n    >\n      <div\n        className={`inner_hand ${name}_hand`}\n        style={{\n          width: `${width}px`,\n          top: `${50 - (length / 2)}%`,\n          bottom: `${50 - (oppositeLength / 2)}%`,\n        }}\n      />\n    </div>\n  );\n}\n\nHand.propTypes = {\n  name: PropTypes.string,\n  angle: PropTypes.number,\n  length: PropTypes.number,\n  width: PropTypes.number,\n  oppositeLength: PropTypes.number,\n};\n\nHand.defaultProps = {\n  name: 'unknown',\n  angle: 0,\n  length: 95,\n  width: 3,\n  oppositeLength: 10,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Tick from './Tick';\nimport Hand from './Hand';\n\nexport default function Tokei(props) {\n  // This makes the hour ticks\n  function renderHourTicksFn() {\n    const hourTicks = [];\n    for (let i = 1; i <= 12; i += 1) {\n      hourTicks.push(\n        <Tick\n          key={`hour_${i}`}\n          angle={i * 30}\n          symbol={`${i}`}\n        />,\n      );\n    }\n    return hourTicks;\n  }\n\n  // Adjust the time\n  const { hour } = props;\n  let { minute, second } = props;\n  minute = minute < 10 ? `0${minute}` : minute;\n  second = second < 10 ? `0${second}` : second;\n\n  function renderMiddle() {\n    return (\n      <div className=\"middle\">\n        <div className=\"middle_inner\" />\n      </div>\n    );\n  }\n\n  function renderHourHand() {\n    const angle = hour * 30 + (minute / 2);\n\n    return (\n      <Hand\n        name=\"hour\"\n        length={60}\n        width={7}\n        angle={angle}\n      />\n    );\n  }\n\n  function renderMinuteHand() {\n    return (\n      <Hand\n        name=\"minute\"\n        length={95}\n        width={3}\n        angle={minute * 6}\n      />\n    );\n  }\n\n  function renderSecondHand() {\n    return (\n      <Hand\n        name=\"second\"\n        length={90}\n        width={1}\n        angle={second * 6}\n      />\n    );\n  }\n\n  function renderFaceText() {\n    return (\n      <div className=\"face_text\">\n        <h1>時計</h1>\n        <h1>\n          {hour}\n          :\n          {minute}\n          :\n          {second}\n        </h1>\n      </div>\n    );\n  }\n\n  return (\n    <>\n      <div className=\"face tokei_face\">\n        {renderFaceText()}\n        {renderHourTicksFn()}\n        {renderHourHand()}\n        {renderMinuteHand()}\n        {renderSecondHand()}\n        {renderMiddle()}\n      </div>\n    </>\n  );\n}\n\nTokei.propTypes = {\n  hour: PropTypes.number,\n  minute: PropTypes.number,\n  second: PropTypes.string,\n};\n\nTokei.defaultProps = {\n  hour: 12,\n  minute: 0,\n  second: 0,\n};\n","const UnfixedHours = {\n  day: [\n    {\n      strike: 6,\n      numeral: '六',\n      zodiacSymbol: '卯',\n      zodiacEmoji: '🐰',\n    },\n    {\n      strike: 5,\n      numeral: '五',\n      zodiacSymbol: '辰',\n      zodiacEmoji: '🐲',\n    },\n    {\n      strike: 4,\n      numeral: '四',\n      zodiacSymbol: '巳',\n      zodiacEmoji: '🐍',\n    },\n    {\n      strike: 9,\n      numeral: '九',\n      zodiacSymbol: '午',\n      zodiacEmoji: '🐴',\n    },\n    {\n      strike: 8,\n      numeral: '八',\n      zodiacSymbol: '未',\n      zodiacEmoji: '🐐',\n    },\n    {\n      strike: 7,\n      numeral: '七',\n      zodiacSymbol: '申',\n      zodiacEmoji: '🐵',\n    },\n  ],\n  night: [\n    {\n      strike: 6,\n      numeral: '六',\n      zodiacSymbol: '酉',\n      zodiacEmoji: '🐓',\n    },\n    {\n      strike: 5,\n      numeral: '五',\n      zodiacSymbol: '戌',\n      zodiacEmoji: '🐕',\n    },\n    {\n      strike: 4,\n      numeral: '四',\n      zodiacSymbol: '亥',\n      zodiacEmoji: '🐷',\n    },\n    {\n      strike: 9,\n      numeral: '九',\n      zodiacSymbol: '子',\n      zodiacEmoji: '🐀',\n    },\n    {\n      strike: 8,\n      numeral: '八',\n      zodiacSymbol: '丑',\n      zodiacEmoji: '🐂',\n    },\n    {\n      strike: 7,\n      numeral: '七',\n      zodiacSymbol: '寅',\n      zodiacEmoji: '🐅',\n    },\n  ],\n};\n\nexport default UnfixedHours;\n","const REGIONS = 6;\nconst MILLIS_PER_MINUTE = 60 * 1000;\nconst MINUTES_PER_DAY = 24 * 60;\n\nexport default class WaTime {\n  constructor(date, sunrise, sunset) {\n    const timeMinutes = date.getHours() * 60 + date.getMinutes();\n\n    this.updateSunriseSunset(sunrise, sunset);\n    this.updateTime(timeMinutes);\n  }\n\n  // to be called once per day when updating the sunrise and sunset times\n  updateSunriseSunset(sunrise, sunset) {\n    // minutes of daylight according to western time\n    this.dayLengthMinutes = (sunset - sunrise) / MILLIS_PER_MINUTE;\n    // minutes of night according to western time\n    this.nightLengthMinutes = MINUTES_PER_DAY - this.dayLengthMinutes;\n\n    // time of the sunrise in minutes since 00:00\n    this.sunriseTimeMinutes = sunrise.getHours() * 60 + sunrise.getMinutes();\n    // time of the sunset in minutes since 00:00\n    this.sunsetTimeMinutes = sunset.getHours() * 60 + sunset.getMinutes();\n  }\n\n  // to be called whenever we need to update the time\n  // must be called after sunrise / sunset are updated\n  updateTime(timeMinutes) {\n    this.timeMinutes = timeMinutes;\n\n    this.minutesFromSunrise = timeMinutes - this.sunriseTimeMinutes;\n    this.minutesFromSunset = timeMinutes - this.sunsetTimeMinutes;\n  }\n\n  // minute of the day in 'Wa' time\n  get waMinute() {\n    return this.minutesFromSunrise >= 0\n      ? this.minutesFromSunrise\n      : this.minutesFromSunrise + MINUTES_PER_DAY;\n  }\n\n  // hour of the day in 'Wa' time\n  get waHour() {\n    let hour = 0;\n    if (this.isDay) {\n      hour = (this.minutesFromSunrise / this.dayLengthMinutes) * REGIONS;\n    } else {\n      const nightMinute = this.minutesFromSunrise < 0\n        ? this.nightLengthMinutes + this.minutesFromSunrise\n        : this.minutesFromSunset;\n      hour = (nightMinute / this.nightLengthMinutes) * REGIONS;\n    }\n    return Math.floor(hour) || 0;\n  }\n\n  // is it daytime?\n  get isDay() {\n    return this.timeMinutes >= this.sunriseTimeMinutes && this.timeMinutes < this.sunsetTimeMinutes;\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Tick from './Tick';\nimport Hand from './Hand';\nimport unfixedHours from './unfixedHours';\nimport WaTime from './waTime';\n\nconst REGIONS = 6;\nconst MILLIS_PER_DAY = 24 * 60 * 60 * 1000;\nconst MINUTES_PER_DAY = 24 * 60;\n\nexport default function Wadokei(props) {\n  const { date, sunrise, sunset } = props;\n  const waTime = new WaTime(date, sunrise, sunset);\n\n  // Calculate the day regions\n  const daytime = sunset - sunrise;\n  const dayRegion = daytime / REGIONS;\n  const dayAngle = (dayRegion / MILLIS_PER_DAY) * 360;\n  const dayStart = 360 - 3 * dayAngle;\n\n  // Calculate the night regions\n  const nighttime = MILLIS_PER_DAY - daytime;\n  const nightRegion = nighttime / REGIONS;\n  const nightAngle = (nightRegion / MILLIS_PER_DAY) * 360;\n  const nightStart = dayAngle * 3;\n\n  function renderRegion(region, name, angle, offset = 0) {\n    const hourTicks = [];\n\n    for (let i = 0; i < region.length; i += 1) {\n      const hour = region[i];\n      hourTicks.push(\n        <Tick\n          key={`hour_${name}_${hour.strike}`}\n          angle={offset + i * angle}\n          symbol={hour.numeral}\n          emoji={hour.zodiacEmoji}\n          secondarySymbol={hour.zodiacSymbol}\n          regionName={name}\n        />,\n      );\n    }\n    return hourTicks;\n  }\n\n  // This makes the unfixed hour ticks\n  function renderHourTicksFn() {\n    const hourTicks = [];\n    // day hours\n    hourTicks.push(\n      ...renderRegion(unfixedHours.day, 'day', dayAngle, dayStart),\n    );\n    // night hours\n    hourTicks.push(\n      ...renderRegion(unfixedHours.night, 'night', nightAngle, nightStart),\n    );\n    return hourTicks;\n  }\n\n  function renderDaySegment() {\n    // calculate our gradient points based on sunrise and sunset\n    const blueMorning = nightAngle;\n    const dawn = 2 * nightAngle;\n    const pinkMorning = 3 * nightAngle;\n    const yellowMorning = 3 * nightAngle + dayAngle;\n    const noon = 180;\n    const yellowAfternoon = noon + 2 * dayAngle;\n    const pinkAfternoon = 360 - 3 * nightAngle;\n    const sundown = 360 - 2 * nightAngle;\n    const blueEvening = 360 - nightAngle;\n    const daylightStyle = {\n      background: `conic-gradient(\n        from 180deg,\n        #00173B ${blueMorning}deg,\n        #072C70 ${dawn}deg,\n        #E772A6 ${pinkMorning}deg,\n        #FDC500 ${yellowMorning}deg,\n        #FFF8D6 ${noon}deg,\n        #FDC500 ${yellowAfternoon}deg,\n        #FD5E5E ${pinkAfternoon}deg,\n        #00296B ${sundown}deg,\n        #00173B ${blueEvening}deg\n        )`,\n    };\n\n    return (\n      <div\n        className=\"day_segment\"\n        style={daylightStyle}\n      />\n    );\n  }\n\n  function renderMiddle() {\n    return (\n      <div className=\"middle\">\n        <div className=\"middle_inner\" />\n      </div>\n    );\n  }\n\n  function renderHourHand() {\n    const angle = dayStart + (waTime.waMinute / MINUTES_PER_DAY) * 360;\n\n    return (\n      <Hand\n        name=\"hour\"\n        length={60}\n        width={7}\n        angle={angle}\n      />\n    );\n  }\n\n  function renderFaceText() {\n    const numeral = waTime.isDay\n      ? unfixedHours.day[waTime.waHour].numeral\n      : unfixedHours.night[waTime.waHour].numeral;\n    return (\n      <div className=\"face_text\">\n        <h1>和時計</h1>\n        <h1>\n          {numeral}\n        </h1>\n      </div>\n    );\n  }\n\n  return (\n    <>\n      <div className=\"face wadokei_face wa_text\">\n        {renderDaySegment()}\n        {renderFaceText()}\n        {renderHourTicksFn()}\n        {renderHourHand()}\n        {renderMiddle()}\n      </div>\n    </>\n  );\n}\n\nWadokei.propTypes = {\n  date: PropTypes.instanceOf(Date).isRequired,\n  sunrise: PropTypes.instanceOf(Date).isRequired,\n  sunset: PropTypes.instanceOf(Date).isRequired,\n};\n","// eslint-disable jsx-a11y/label-has-associated-control\nimport './ToggleSwitch.scss';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function ToggleSwitch({\n  id, checked, onChange, optionLabels,\n}) {\n  return (\n    <div className=\"toggle-switch\">\n      <input\n        type=\"checkbox\"\n        className=\"toggle-switch-checkbox\"\n        name={id}\n        id={id}\n        checked={checked}\n        onChange={(e) => onChange(e.target.checked)}\n      />\n      {id ? (\n        <label className=\"toggle-switch-label\" htmlFor={id}>\n          <span\n            className=\"toggle-switch-inner\"\n            data-yes={optionLabels[0]}\n            data-no={optionLabels[1]}\n          />\n          <span\n            className=\"toggle-switch-switch\"\n          />\n        </label>\n      ) : null}\n\n    </div>\n  );\n}\n\nToggleSwitch.propTypes = {\n  id: PropTypes.string.isRequired,\n  checked: PropTypes.bool.isRequired,\n  onChange: PropTypes.instanceOf(Function).isRequired,\n  optionLabels: PropTypes.instanceOf(Array),\n};\n\nToggleSwitch.defaultProps = {\n  optionLabels: ['ON', 'OFF'],\n};\n","import './App.css';\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Tokei from './Tokei';\nimport Wadokei from './Wadokei';\nimport ToggleSwitch from './ToggleSwitch/ToggleSwitch';\n\nexport default function Container({ sunrise, sunset, size }) {\n  const [date, setDate] = useState(new Date());\n\n  const [wa, setWa] = useState(true);\n\n  // update the time every second\n  useEffect(() => {\n    const interval = setInterval(\n      () => setDate(new Date()),\n      1000,\n    );\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  const hour = date.getHours() % 12;\n  const minute = date.getMinutes();\n  const second = date.getSeconds();\n\n  function renderClock() {\n    if (wa) {\n      return (\n        <Wadokei date={date} sunrise={sunrise} sunset={sunset} />\n      );\n    }\n    return (<Tokei hour={hour} minute={minute} second={second} />);\n  }\n\n  const onWaChange = (checked) => {\n    setWa(checked);\n  };\n\n  return (\n    <div\n      className=\"container\"\n      style={{\n        width: `${size}px`,\n      }}\n    >\n      <div\n        style={{\n          width: `${size}px`,\n          height: `${size}px`,\n        }}\n      >\n        {renderClock()}\n      </div>\n      <ToggleSwitch\n        id=\"waToggle\"\n        checked={wa}\n        onChange={onWaChange}\n        optionLabels={['和', '洋']}\n      />\n    </div>\n  );\n}\n\nContainer.propTypes = {\n  sunrise: PropTypes.instanceOf(Date).isRequired,\n  sunset: PropTypes.instanceOf(Date).isRequired,\n  size: PropTypes.number,\n};\n\nContainer.defaultProps = {\n  size: 600,\n};\n","/* eslint-disable no-unused-vars */\nimport './App.css';\nimport React, { useEffect, useState } from 'react';\nimport Container from './Container';\n\nconst axios = require('axios');\n\nconst MILLIS_PER_MINUTE = 60 * 1000;\n\nfunction App() {\n  // TODO: Fetch from https://sunrise-sunset.org/api\n\n  // default to Japan\n  const lat = 35.68;\n  const lon = 139.75;\n  const url = `https://api.sunrise-sunset.org/json?lat=${lat}&lng=${lon}&date=today&formatted=0`;\n\n  const [today, setToday] = useState(new Date());\n  const [sunrise, setSunrise] = useState(new Date());\n  const [sunset, setSunset] = useState(new Date());\n\n  function APITimeToDate(APITime) {\n    const UTCTime = new Date(APITime);\n    return new Date(UTCTime.toLocaleString());\n  }\n\n  function fetchSunsetSunrise() {\n    axios.get(url)\n      .then((response) => {\n        // handle success\n        console.log(response.data.results);\n        setSunrise(APITimeToDate(response.data.results.sunrise));\n        setSunset(APITimeToDate(response.data.results.sunset));\n      })\n      .catch((error) => {\n        // handle error\n        console.log(error);\n        setSunrise(new Date('2021-02-18T6:24:15'));\n        setSunset(new Date('2021-02-18T17:25:27'));\n      });\n  }\n\n  // initial call\n  useEffect(() => {\n    fetchSunsetSunrise();\n  }, []);\n\n  function sameDay(day1, day2) {\n    return day1.getDate === day2.getDate()\n      && day1.getMonth === day2.getMonth()\n      && day1.getYear === day2.getYear();\n  }\n\n  // recheck every interval\n  useEffect(() => {\n    const interval = setInterval(\n      () => {\n        setToday(new Date());\n        if (!sameDay(today, sunrise)) {\n          fetchSunsetSunrise();\n        }\n      },\n      MILLIS_PER_MINUTE,\n    );\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Container sunrise={sunrise} sunset={sunset} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}